plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id "io.spring.dependency-management" version "1.1.0"
    id "io.freefair.lombok" version "6.6"
    id "org.springdoc.openapi-gradle-plugin" version "1.6.0"
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group 'plus.maa'
version '1.0-SNAPSHOT'

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.0")
}

dependencies {
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    //springdoc相关依赖没有被自动管理，必须保留版本号
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'cn.hutool:hutool-all:5.8.11'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.4.0.202211300538-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.apache:6.4.0.202211300538-r'
    implementation 'org.freemarker:freemarker:2.3.32'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.2'
    implementation 'com.github.erosb:everit-json-schema:1.14.1'
    implementation 'com.google.guava:guava:31.1-jre'

    testImplementation "org.mockito:mockito-core:3.+"

    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.41'

}

test {
    useJUnitPlatform()
}

def swagger_output_dir = "$buildDir/docs"
def swagger_output_name = 'swagger.json'

openApi {
    apiDocsUrl.set("http://localhost:8848/v3/api-docs")
    outputDir.set(file(swagger_output_dir))
    outputFileName.set(swagger_output_name)
    waitTimeInSeconds.set(10)
}

swaggerSources {
    def client_dir = "$buildDir/clients"
    TsFetch {
        inputFile = file("$swagger_output_dir/$swagger_output_name")
        code {
            language = 'typescript-fetch'
            configFile = file('client-config/ts-fetch.json')
            templateDir = file('client-config/typescript-fetch')
            rawOptions = ["--template-engine", "mustache"]
            outputDir = file("$client_dir/ts-fetch-client")
        }
    }
    CSharp {
        inputFile = file("$swagger_output_dir/$swagger_output_name")
        code {
            language = 'csharp'
            configFile = file('client-config/csharp.json')
            outputDir = file("$client_dir/csharp-client")
        }
    }
}