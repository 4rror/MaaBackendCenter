name: CI

on:
  push:
    branches:
      - "master"
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # REGISTRY是空就推送到官方仓库
  REGISTRY: ''
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
  TAG_SHA: ${{ github.sha }}
  TAG_LATEST: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      #checkout代码
      - uses: actions/checkout@v3
#      #安装jdk18
#      - name: 安装jdk17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
      #安装graalvm
      - name: 安装graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
      #查看版本信息
      - name: 查看版本信息
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version
      #校验Gradle wrapper
      - name: 校验Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      #使用Gradle编译项目
      - name: 使用Gradle编译项目
        uses: gradle/gradle-build-action@v2
        with:
          arguments: nativeCompile

      # 登录docker仓库
      - name: 登录docker仓库 ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # build docker镜像并推送到docker仓库
      - name: build docker镜像并推送到docker仓库
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{env.IMAGE_NAME}}:v${{env.TAG_SHA}},${{env.IMAGE_NAME}}:${{env.TAG_LATEST}}